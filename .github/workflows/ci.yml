name: CI

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_TOOLCHAIN: nightly

jobs:
  run-examples:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Install Bevy dependencies
        run: |
          sudo apt-get update;
          DEBIAN_FRONTEND=noninteractive sudo apt-get install --no-install-recommends -yq \
            libasound2-dev libudev-dev;
      - name: install xvfb, llvmpipe and lavapipe
        run: |
          sudo apt-get update -y -qq
          sudo add-apt-repository ppa:oibaf/graphics-drivers -y
          sudo apt-get update
          sudo apt install -y xvfb libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-run-examples-${{ hashFiles('**/Cargo.toml') }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build bevy
        # this uses the same command as when running the example to ensure build is reused
        run: |
          TRACE_CHROME=trace-alien_cake_addict.json CI_TESTING_CONFIG=.github/example-run/alien_cake_addict.ron cargo build --example alien_cake_addict --features "bevy_ci_testing,trace,trace_chrome"
      - name: Run examples
        run: |
          for example in .github/example-run/*.ron; do
            example_name=`basename $example .ron`
            echo -n $example_name > last_example_run
            echo "running $example_name - "`date`
            time TRACE_CHROME=trace-$example_name.json CI_TESTING_CONFIG=$example xvfb-run cargo run --example $example_name --features "bevy_ci_testing,trace,trace_chrome"
            sleep 10
          done
          zip traces.zip trace*.json
      - name: save traces
        uses: actions/upload-artifact@v3
        with:
          name: example-traces.zip
          path: traces.zip
      - name: Save PR number
        if: ${{ failure() && github.event_name == 'pull_request' }}
        run: |
          mkdir -p ./example-run
          echo ${{ github.event.number }} > ./example-run/NR
          mv last_example_run ./example-run/
      - uses: actions/upload-artifact@v2
        if: ${{ failure() && github.event_name == 'pull_request' }}
        with:
          name: example-run
          path: example-run/


  check-missing-examples-in-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: check for missing metadata
        id: missing-metadata
        run: cargo run -p build-example-pages -- check-missing
      - name: check for missing update
        id: missing-update
        run: cargo run -p build-example-pages -- update
      - name: Check for modified files
        run: |
          echo "if this step fails, run the following command and commit the changed file on your PR."
          echo " > cargo run -p build-example-pages -- update"
          git diff --quiet HEAD --
      - name: Save PR number
        if: ${{ failure() && github.event_name == 'pull_request' }}
        run: |
          mkdir -p ./missing-examples
          echo ${{ github.event.number }} > ./missing-examples/NR
      - name: log failed task - missing metadata
        if: ${{ failure() && github.event_name == 'pull_request' && steps.missing-metadata.conclusion == 'failure' }}
        run: touch ./missing-examples/missing-metadata
      - name: log failed task - missing update
        if: ${{ failure() && github.event_name == 'pull_request' && steps.missing-update.conclusion == 'failure' }}
        run: touch ./missing-examples/missing-update
      - uses: actions/upload-artifact@v2
        if: ${{ failure() && github.event_name == 'pull_request' }}
        with:
          name: missing-examples
          path: missing-examples/


  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-msrv-${{ hashFiles('**/Cargo.toml') }}
      - name: get MSRV
        run: |
          msrv=`cargo metadata --no-deps --format-version 1 | jq --raw-output '.packages[] | select(.name=="bevy") | .rust_version'`
          echo "MSRV=$msrv" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.MSRV }}
      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Run cargo check
        run: cargo check
      - name: Save PR number
        if: ${{ failure() && github.event_name == 'pull_request' }}
        run: |
          mkdir -p ./msrv
          echo ${{ github.event.number }} > ./msrv/NR
      - uses: actions/upload-artifact@v2
        if: ${{ failure() && github.event_name == 'pull_request' }}
        with:
          name: msrv
          path: msrv/
